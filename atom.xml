<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Holy Ruby!]]></title>
  <link href="http://jonahoffline.github.io/atom.xml" rel="self"/>
  <link href="http://jonahoffline.github.io/"/>
  <updated>2013-08-14T21:46:28-04:00</updated>
  <id>http://jonahoffline.github.io/</id>
  <author>
    <name><![CDATA[Jonah Ruiz]]></name>
    <email><![CDATA[jonah@pixelhipsters.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[We Are Deprecateware]]></title>
    <link href="http://jonahoffline.github.io/we-are-deprecateware/"/>
    <updated>2013-08-14T10:57:00-04:00</updated>
    <id>http://jonahoffline.github.io/we-are-deprecateware</id>
    <content type="html"><![CDATA[<p>As developers, we are in a constant race against technical and knowledge debt. Like it or not, it&rsquo;s impossible to win. By default, we are deprecateware; we are destined to grow irrelevant and be replaced eventually. Usually someone younger with a higher threshold for pain and a full tank of tolerance ready for your textbook example of software archeology, ancient practices and verbosity monstrosity you shamelessly call code.</p>

<p>To delay this natural cycle and leave a mark, we have to be willing to try new things and adapt fast. Go ahead and experiment, dive deep into it until you can build something new. This integration process is often a loop that requires a lot of time, patience and commitment; We trade-in productivity for new knowledge; we leave our comfort zone in exchange for a possible lethal dose of frustration, anger and even depression. To discard any new programming language, framework or software as hype-technology; and let ourselves slowly fade into the background is simpler and requires no effort.</p>

<blockquote><p>&ldquo;It&rsquo;s easy to attack and destroy an act of creation. It&rsquo;s a lot more difficult to perform one.&rdquo; &ndash; Chuck Palahniuk</p></blockquote>

<h2>Become a Polyglot</h2>

<p>Don&rsquo;t conform to a single language, infrastructure or database. Push yourself to learn new skills. Being able to properly write tests and code in more than one language will make you more valuable. Being diverse means less limits, new horizons. Transferring newly acquired knowledge not only help others, it solidifies your understanding of it.</p>

<h2>Innovation and Fear of Failure</h2>

<blockquote><p>&ldquo;An innovation is something <strong>original, new, and important</strong> &ndash; in whatever field &ndash; that breaks in to (or obtains a foothold in) a market or society.&rdquo;(<a href="http://en.wikipedia.org/wiki/Innovation">wikipedia</a>)</p></blockquote>

<p><strong>BULLSHIT</strong>.</p>

<p>Innovation is a result of combining existent elements or ideas that were waiting to be merged. Innovation is ever omnipresent, it is not sporadic nor a one-time event. When you open source a project or contribute in a community like <a href="https://www.github.com">Github</a> or <a href="https://www.bitbucket.org">Bitbucket</a>, you take part in the innovation iteration. No matter how simple, unstable or insignificant you may think your code or contribution is; you are changing the World with each commit. To be aware of this privilege and power should be enough to get through your head that you can&rsquo;t fail even if you&rsquo;d try to. Fear of failure is as illogical as fear of drowning in bed. <a href="http://www.youtube.com/watch?v=nRB8Jor8tPs">Shun the non-believers!</a> Your code might save someone&rsquo;s life tomorrow.</p>

<p>Be a GitThug, embrace change and you&rsquo;ll get a GitHug :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RSpec Test Results in HTML]]></title>
    <link href="http://jonahoffline.github.io/rspec-test-results-in-html/"/>
    <updated>2013-08-07T00:25:00-04:00</updated>
    <id>http://jonahoffline.github.io/rspec-test-results-in-html</id>
    <content type="html"><![CDATA[<p>When working with <strong>Ruby On Rails</strong> and <strong>RSpec</strong>, you may want to share your test results with teammates. A screenshot of the terminal just won&rsquo;t do it. Let&rsquo;s make RSpec generate an html page for us.</p>

<pre><code>$ rspec --format html --out rspec_results.html
</code></pre>

<p>Depending on your tests, it might look <a href="http://1.bp.blogspot.com/_S5dFdpF6xm0/Sry7S3aXd6I/AAAAAAAAAX0/psgyFEcA5tA/s400/rasta-orangutan-Julia-Malanjina.jpg">Rastafarian</a> if you have tests that are pending and failing. Luckily for us, you can filter them.</p>

<p>Here&rsquo;s a results screenshot of a Rails App I&rsquo;ve been working on (<a href="https://www.github.com/jpadilla/sopr-platform">SoPR</a>)</p>

<p><img src="http://pixelhipsters.com/media/rspec_html_screen.png" alt="Screenshot" /></p>

<h2>Automating the process</h2>

<p>There are two ways to achieve this.</p>

<h3>Using RSpec&rsquo;s config file</h3>

<p>I assume you have an <code>.rspec</code> file in your project&rsquo;s root directory. Let&rsquo;s add the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">--format html</span>
</span><span class='line'><span class="go">--out rspec_results.html</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now you should be able to just run the <code>rspec</code> command and get the same results.</p>

<h3>Writing a Rake Task</h3>

<p>As an alternative, you can also write a simple Rake task. Let&rsquo;s write a new file to <code>lib/tasks/rspec_html.rake</code> inside our Rails project.</p>

<figure class='code'><figcaption><span>RSpec Rake Task - rspec_html.rake </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rspec/core/rake_task&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="ss">RSpec</span><span class="p">:</span><span class="ss">:Core</span><span class="o">::</span><span class="no">RakeTask</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:spec</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">rspec_opts</span> <span class="o">=</span> <span class="s1">&#39;--format html --out reports/rspec_results.html&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">namespace</span> <span class="ss">:rspec_report</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">desc</span> <span class="s1">&#39;Run all specs and generate RSpec report in HTML&#39;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:html</span> <span class="o">=&gt;</span> <span class="ss">:spec</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">desc</span> <span class="s1">&#39;Run all specs, generate RSpec report and open it in the browser&#39;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:browser</span> <span class="k">do</span>
</span><span class='line'>    <span class="ss">Rake</span><span class="p">:</span><span class="ss">:Task</span><span class="o">[</span><span class="ss">:spec</span><span class="o">].</span><span class="n">invoke</span>
</span><span class='line'>    <span class="sb">`open reports/rspec_results.html`</span> <span class="c1"># This only works if running OS X.</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Gist available <a href="https://gist.github.com/jonahoffline/6170634#file-rspec_html-rake">here</a>.</p>

<p>If we run <code>$ rake -T</code>, we will see two new rake tasks:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">rake rspec_report:html</span>
</span><span class='line'><span class="go">rake rspec_report:browser</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>The first, <code>rspec:html</code> will run all specs and write the report to <code>reports/rspec_results.html</code>.
The second, <code>rspec:browser</code> will run the first task and open the report in the browser (only works in OS X).</p>

<p>Cheers!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RVM for your Ruby projects]]></title>
    <link href="http://jonahoffline.github.io/rvm-for-your-ruby-projects/"/>
    <updated>2013-07-29T23:39:00-04:00</updated>
    <id>http://jonahoffline.github.io/rvm-for-your-ruby-projects</id>
    <content type="html"><![CDATA[<p>While doing some pair-programming with a friend of mine, I noticed he had <a href="https://www.rvm.io">RVM</a> installed but only used one gemset for <em>everything</em>. As a result, his machine was slow and polluted with old gem versions. You could say that it was almost a mirror of <a href="http://www.rubygems.org">Rubygems</a>. I wondered how many ruby developers had the same problem so I decided to share this.</p>

<h2>Installing RVM</h2>

<p>If you have never used RVM, you&rsquo;ve been missing out. It won&rsquo;t do the dishes or clean your room, but it will make you happier. RVM allows you to easily install, manage, and work with multiple ruby environments. Avoiding version conflicts and maintaining any ruby project, gem, or Rails app organized is now a breeze.</p>

<p>Let&rsquo;s get it out of the way and install it along a stable version of Ruby.</p>

<pre><code>$ \curl -L https://get.rvm.io | bash -s stable --ruby
</code></pre>

<p>Depending on your internet connection and computer, it will take a few minutes. Once that&rsquo;s done, you will need to reopen your shell window or run:</p>

<pre><code>$ source ~/.rvm/scripts/rvm
</code></pre>

<p>Let&rsquo;s verify that RVM is loaded and that everything is installed correctly.</p>

<pre><code>$ rvm current
</code></pre>

<p>You should now get a Ruby version (e.g., <code>ruby-2.0.0-p247</code>). If you didn&rsquo;t, run <code>rvm notes</code>.</p>

<h2>Using RVM to organize your projects</h2>

<p>Instead of globally sharing one gemset for all projects, let&rsquo;s create one for our imaginary <strong>Quantum Kittens</strong> Rails App.</p>

<p>Just enter the directory and run:</p>

<pre><code>$ rvm --create --ruby-version ruby-2.0.0-p247@quantum_kittens
</code></pre>

<p>The command will not output anything, but if we run <code>ls -a</code> you will notice there are now two files in the directory.</p>

<pre><code>.ruby-version
.ruby-gemset
</code></pre>

<p>From now on, RVM will automatically change into that ruby version (<code>ruby-2.0.0-p247</code>) with any gems you install to its self-contained gemset (<code>quantum_kittens</code>) every time you enter that directory. You should check these two files into your source control.</p>

<h4>Other useful RVM commands</h4>

<p>This article would not be complete without a few of the most used RVM commands.</p>

<p>To verify the current version and gemset:</p>

<pre><code>$ rvm current
</code></pre>

<p>To get a list of gemsets:</p>

<pre><code>$ rvm gemset list
</code></pre>

<p>To get a list of all the installed versions of ruby:</p>

<pre><code>$ rvm list  
</code></pre>

<p>To view available versions of ruby to install:</p>

<pre><code>$ rvm list known
</code></pre>

<p>To install  another ruby version:</p>

<pre><code>$ rvm install rbx-head
</code></pre>

<p>To set a default ruby with a new gemset:</p>

<pre><code>$ rvm --create --default use rbx-head@kawaii_gems
</code></pre>

<p>To remove a gemset:</p>

<pre><code>$ rvm gemset delete evil_gems
</code></pre>
]]></content>
  </entry>
  
</feed>
