<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: RSpec | Holy Ruby!]]></title>
  <link href="http://jonahoffline.github.io/categories/rspec/atom.xml" rel="self"/>
  <link href="http://jonahoffline.github.io/"/>
  <updated>2013-08-14T20:39:02-04:00</updated>
  <id>http://jonahoffline.github.io/</id>
  <author>
    <name><![CDATA[Jonah Ruiz]]></name>
    <email><![CDATA[jonah@pixelhipsters.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RSpec Test Results in HTML]]></title>
    <link href="http://jonahoffline.github.io/rspec-test-results-in-html/"/>
    <updated>2013-08-07T00:25:00-04:00</updated>
    <id>http://jonahoffline.github.io/rspec-test-results-in-html</id>
    <content type="html"><![CDATA[<p>When working with <strong>Ruby On Rails</strong> and <strong>RSpec</strong>, you may want to share your test results with teammates. A screenshot of the terminal just won&rsquo;t do it. Let&rsquo;s make RSpec generate an html page for us.</p>

<pre><code>$ rspec --format html --out rspec_results.html
</code></pre>

<p>Depending on your tests, it might look <a href="http://1.bp.blogspot.com/_S5dFdpF6xm0/Sry7S3aXd6I/AAAAAAAAAX0/psgyFEcA5tA/s400/rasta-orangutan-Julia-Malanjina.jpg">Rastafarian</a> if you have tests that are pending and failing. Luckily for us, you can filter them.</p>

<p>Here&rsquo;s a results screenshot of a Rails App I&rsquo;ve been working on (<a href="https://www.github.com/jpadilla/sopr-platform">SoPR</a>)</p>

<p><img src="http://pixelhipsters.com/media/rspec_html_screen.png" alt="Screenshot" /></p>

<h2>Automating the process</h2>

<p>There are two ways to achieve this.</p>

<h3>Using RSpec&rsquo;s config file</h3>

<p>I assume you have an <code>.rspec</code> file in your project&rsquo;s root directory. Let&rsquo;s add the following:</p>

<p><code>console
--format html
--out rspec_results.html
</code></p>

<p>Now you should be able to just run the <code>rspec</code> command and get the same results.</p>

<h3>Writing a Rake Task</h3>

<p>As an alternative, you can also write a simple Rake task. Let&rsquo;s write a new file to <code>lib/tasks/rspec_html.rake</code> inside our Rails project.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>RSpec Rake Task &ndash; rspec_html.rake </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">rspec</span><span class="o">/</span><span class="n">core</span><span class="o">/</span><span class="n">rake_task</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;RSpec::Core::RakeTask.new(:spec) do |t|</span>
</span><span class='line'><span class="sr">  t.rspec_opts = &amp;lsquo;&amp;mdash;format html &amp;mdash;out reports/</span><span class="n">rspec_results</span><span class="o">.</span><span class="n">html</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;namespace :rspec_report do</span>
</span><span class='line'><span class="sr">  desc &amp;lsquo;Run all specs and generate RSpec report in HTML&amp;rsquo;</span>
</span><span class='line'><span class="sr">  task :html =&gt; :spec&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="n">desc</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">Run</span> <span class="n">all</span> <span class="n">specs</span><span class="p">,</span> <span class="n">generate</span> <span class="no">RSpec</span> <span class="n">report</span> <span class="ow">and</span> <span class="nb">open</span> <span class="n">it</span> <span class="k">in</span> <span class="n">the</span> <span class="n">browser</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:browser</span> <span class="k">do</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;Rake::Task[:spec].invoke</span>
</span><span class='line'><span class="sr">`open reports/</span><span class="n">rspec_results</span><span class="o">.</span><span class="n">html</span><span class="sb">` # This only works if running OS X.</span>
</span><span class='line'><span class="sb">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">&lt;p&gt;  end</span>
</span><span class='line'><span class="sb">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
Gist available <a href="https://gist.github.com/jonahoffline/6170634#file-rspec_html-rake">here</a>.</p>

<p>If we run <code>$ rake -T</code>, we will see two new rake tasks:</p>

<p><code>console
rake rspec_report:html
rake rspec_report:browser
</code></p>

<p>The first, <code>rspec:html</code> will run all specs and write the report to <code>reports/rspec_results.html</code>.
The second, <code>rspec:browser</code> will run the first task and open the report in the browser (only works in OS X).</p>

<p>Cheers!</p>
]]></content>
  </entry>
  
</feed>
